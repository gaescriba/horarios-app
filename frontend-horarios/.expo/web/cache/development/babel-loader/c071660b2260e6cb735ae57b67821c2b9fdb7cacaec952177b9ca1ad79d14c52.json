{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport axios from \"axios\";\nimport * as SecureStore from 'expo-secure-store';\nimport { getAddr } from \"../../../helpers/getAddr.js\";\nexport var loginSuccess = function loginSuccess(isProfesor) {\n  return {\n    type: 'LOGIN_SUCCESS',\n    isProfesor: isProfesor\n  };\n};\nexport var loginFailure = function loginFailure() {\n  return {\n    type: 'LOGIN_FAILURE'\n  };\n};\nexport var login = function login(email, password, isProfesor) {\n  return function () {\n    var _ref = _asyncToGenerator(function* (dispatch) {\n      try {\n        var ipAddr = getAddr();\n        var data = {\n          email: email,\n          password: password,\n          isProfesor: isProfesor\n        };\n        var response = yield axios.post(\"http://\" + ipAddr + \":3000/getters/login\", data);\n        yield SecureStore.setItemAsync('token', response.data.token);\n        dispatch(loginSuccess(isProfesor));\n      } catch (err) {\n        dispatch(loginFailure());\n        throw err;\n      }\n    });\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"names":["axios","SecureStore","getAddr","loginSuccess","isProfesor","type","loginFailure","login","email","password","_ref","_asyncToGenerator","dispatch","ipAddr","data","response","post","setItemAsync","token","err","_x","apply","arguments"],"sources":["/home/ddonda/horarios-inacap/redux/modules/auth/actions.js"],"sourcesContent":["import axios from \"axios\"\nimport * as SecureStore from 'expo-secure-store'\nimport { getAddr } from '../../../helpers/getAddr.js'\n\nexport const loginSuccess = isProfesor => {\n  return {\n    type: 'LOGIN_SUCCESS',\n    isProfesor\n  }\n}\n\nexport const loginFailure = () => {\n  return {\n    type: 'LOGIN_FAILURE'\n  }\n}\n\nexport const login = (email, password, isProfesor) => {\n  return async dispatch => {\n    try{\n      const ipAddr = getAddr()\n      const data = {\n        email,\n        password,\n        isProfesor\n      }\n      const response = await axios.post(`http://${ipAddr}:3000/getters/login`, data)\n      await SecureStore.setItemAsync('token', response.data.token) \n      dispatch(loginSuccess(isProfesor))\n    }catch(err){\n      dispatch(loginFailure())\n      throw err;\n    }\n  } \n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,KAAKC,WAAW,MAAM,mBAAmB;AAChD,SAASC,OAAO;AAEhB,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAGC,UAAU,EAAI;EACxC,OAAO;IACLC,IAAI,EAAE,eAAe;IACrBD,UAAU,EAAVA;EACF,CAAC;AACH,CAAC;AAED,OAAO,IAAME,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;EAChC,OAAO;IACLD,IAAI,EAAE;EACR,CAAC;AACH,CAAC;AAED,OAAO,IAAME,KAAK,GAAG,SAARA,KAAKA,CAAIC,KAAK,EAAEC,QAAQ,EAAEL,UAAU,EAAK;EACpD;IAAA,IAAAM,IAAA,GAAAC,iBAAA,CAAO,WAAMC,QAAQ,EAAI;MACvB,IAAG;QACD,IAAMC,MAAM,GAAGX,OAAO,CAAC,CAAC;QACxB,IAAMY,IAAI,GAAG;UACXN,KAAK,EAALA,KAAK;UACLC,QAAQ,EAARA,QAAQ;UACRL,UAAU,EAAVA;QACF,CAAC;QACD,IAAMW,QAAQ,SAASf,KAAK,CAACgB,IAAI,aAAWH,MAAM,0BAAuBC,IAAI,CAAC;QAC9E,MAAMb,WAAW,CAACgB,YAAY,CAAC,OAAO,EAAEF,QAAQ,CAACD,IAAI,CAACI,KAAK,CAAC;QAC5DN,QAAQ,CAACT,YAAY,CAACC,UAAU,CAAC,CAAC;MACpC,CAAC,QAAMe,GAAG,EAAC;QACTP,QAAQ,CAACN,YAAY,CAAC,CAAC,CAAC;QACxB,MAAMa,GAAG;MACX;IACF,CAAC;IAAA,iBAAAC,EAAA;MAAA,OAAAV,IAAA,CAAAW,KAAA,OAAAC,SAAA;IAAA;EAAA;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}